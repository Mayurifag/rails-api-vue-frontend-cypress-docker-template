---

name: CI

on:
  - push
  - pull_request

jobs:
  stylelint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: stylelint
        working-directory: ./frontend
        run: |
          yarn
          yarn css:lint
#######################################
  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: eslint
        working-directory: ./frontend
        run: |
          yarn
          yarn run lint
#######################################
  cypress:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Run dockerized Cypress
        run: |
          make cypress
#######################################
  editorconfig-checker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Run Editorconfig
        run: |
          docker run --rm --volume=$PWD:/check mstruebing/editorconfig-checker

  yamllint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Python 3.x
        uses: actions/setup-python@v1
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Lint with yamllint
        run: |
          pip install yamllint
          yamllint --strict .
#######################################
  brakeman:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Ruby 2.7
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7.x

      - name: brakeman
        working-directory: ./backend
        run: |
          gem install brakeman
          brakeman
#######################################
  fasterer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7.x

      - name: fasterer
        working-directory: ./backend
        run: |
          gem install fasterer
          fasterer
#######################################
  reek:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Ruby 2.7
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7.x

      - name: reek
        working-directory: ./backend
        run: |
          gem install reek
          reek --no-documentation
#######################################
  bundle-leak:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Ruby 2.7
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7.x

      - name: bundle leak
        working-directory: ./backend
        run: |
          gem install bundler bundler-leak
          bundle leak check --update
#######################################
  bundle-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Ruby 2.7
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7.x

      - name: bundle audit
        working-directory: ./backend
        run: |
          gem install bundler bundler-audit
          bundle audit check --update
#######################################
  rubocop:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.6-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Ruby 2.7
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7.x

      - name: install PostgreSQL client
        run: sudo apt-get install libpq-dev

      - name: Cache gems
        uses: actions/cache@v1
        with:
          path: backend/vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: Launch rubocop
        working-directory: ./backend
        env:
          RAILS_ENV: test
          PGHOST: localhost
          PGUSER: postgres
          POSTGRES_PASSWORD: postgres
          PGPORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          bundle exec rails db:setup
          bundle exec rubocop --parallel
#######################################
  consistency_fail:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.6-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Ruby 2.7
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7.x

      - name: install PostgreSQL client
        run: sudo apt-get install libpq-dev

      - name: Cache gems
        uses: actions/cache@v1
        with:
          path: backend/vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: consistency_fail
        working-directory: ./backend
        env:
          RAILS_ENV: test
          PGHOST: localhost
          PGUSER: postgres
          POSTGRES_PASSWORD: postgres
          PGPORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          bundle exec rails db:setup
          bundle exec consistency_fail
#######################################
  database_consistency:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.6-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Ruby 2.7
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7.x

      - name: install PostgreSQL client
        run: sudo apt-get install libpq-dev

      - name: Cache gems
        uses: actions/cache@v1
        with:
          path: backend/vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: Launch database_consistency
        working-directory: ./backend
        env:
          RAILS_ENV: test
          PGHOST: localhost
          PGUSER: postgres
          POSTGRES_PASSWORD: postgres
          PGPORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          bundle exec rails db:setup
          bundle exec database_consistency
#######################################
  rspec:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.6-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Ruby 2.7
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7.x

      # required to compile pg ruby gem
      - name: install PostgreSQL client
        run: sudo apt-get install libpq-dev

      - name: Cache gems
        uses: actions/cache@v1
        with:
          path: backend/vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: Start Redis v6
        uses: superchargejs/redis-github-action@1.1.0
        with:
          redis-version: 6

      - name: Build DB and run Rspec
        working-directory: ./backend
        env:
          PGHOST: localhost
          PGUSER: postgres
          POSTGRES_PASSWORD: postgres
          PGPORT: ${{ job.services.postgres.ports[5432] }}
          RAILS_ENV: test
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --without development production --jobs 4 --retry 3
          bundle exec rails db:setup
          bundle exec rspec
